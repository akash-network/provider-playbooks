---
- name: Check current Helm version (if any)
  ansible.builtin.command: helm version --short
  register: helm_version
  failed_when: false
  delegate_to: node1
  run_once: true

- name: Download Helm install script
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    dest: /tmp/get_helm.sh
    mode: '0755'
  delegate_to: node1
  run_once: true

- name: Run Helm install script for v3.17.3
  environment:
    HELM_INSTALL_VERSION: "v3.17.3"
  ansible.builtin.command: /tmp/get_helm.sh
  when: helm_version.stdout is not defined or 'v3.17.3' not in helm_version.stdout
  delegate_to: node1
  run_once: true

- name: Create installation directory on control plane
  ansible.builtin.file:
    path: "{{ install_dir }}"
    state: directory
    mode: '0755'
  delegate_to: node1
  run_once: true

- name: Create NVIDIA RuntimeClass manifest on control plane
  ansible.builtin.copy:
    src: "nvidia-runtime.yml"
    dest: "{{ install_dir }}/nvidia-runtime-class.yml"
  delegate_to: node1
  run_once: true

- name: Apply NVIDIA RuntimeClass from control plane
  kubernetes.core.k8s:
    state: present
    src: "{{ install_dir }}/nvidia-runtime-class.yml"
  delegate_to: node1
  run_once: true

- name: Label GPU nodes for NVIDIA support
  kubernetes.core.k8s:
    state: patched
    kind: Node
    name: "{{ inventory_hostname }}"
    definition:
      metadata:
        labels:
          allow-nvdp: "true"
          nvidia.com/gpu.present: "true"
  delegate_to: node1
  run_once: true

- name: Add NVIDIA Device Plugin Helm repository
  kubernetes.core.helm_repository:
    name: nvdp
    repo_url: https://nvidia.github.io/k8s-device-plugin
  delegate_to: node1
  run_once: true

- name: Update Helm repositories
  command: helm repo update
  changed_when: true
  delegate_to: node1
  run_once: true

- name: Check for required GPU node labels
  ansible.builtin.shell: >
    kubectl get node {{ inventory_hostname }} -o json | jq -r '
    {
      "name": .metadata.name,
      "has_allow_nvdp": (.metadata.labels."allow-nvdp" == "true"),
    } | tostring'
  register: node_labels_check
  changed_when: false
  delegate_to: node1
  run_once: true

- name: Parse node label results
  ansible.builtin.set_fact:
    parsed_node_labels: "{{ [node_labels_check.stdout | from_json] }}"
  delegate_to: node1
  run_once: true

- name: Display nodes missing required labels
  ansible.builtin.debug:
    msg: "Node {{ item.name }} missing labels: {{
      (item.has_allow_nvdp == false) | ternary('allow-nvdp=true ', '') }}"
  loop: "{{ parsed_node_labels }}"
  when: not (item.has_allow_nvdp)
  delegate_to: node1
  run_once: true

- name: Fail if required labels are missing
  ansible.builtin.fail:
    msg: "Node {{ item.name }} is missing required labels: {{
      (item.has_allow_nvdp == false) | ternary('allow-nvdp=true ', '') }}"
  loop: "{{ parsed_node_labels }}"
  when: not (item.has_allow_nvdp)
  delegate_to: node1
  run_once: true

- name: Check if any node has all required labels
  ansible.builtin.set_fact:
    labels_ready: "{{ labels_ready | default(false) or (item.has_allow_nvdp) }}"
  loop: "{{ parsed_node_labels }}"
  delegate_to: node1
  run_once: true

- name: Install NVIDIA Device Plugin
  kubernetes.core.helm:
    name: nvdp
    chart_ref: nvdp/nvidia-device-plugin
    release_namespace: nvidia-device-plugin
    create_namespace: true
    chart_version: 0.17.1
    values:
      runtimeClassName: nvidia
      deviceListStrategy: volume-mounts
      nodeSelector:
        allow-nvdp: "true"
    state: present
  when: labels_ready | bool
  delegate_to: node1
  run_once: true
