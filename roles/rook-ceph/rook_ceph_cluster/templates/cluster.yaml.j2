---
apiVersion: ceph.rook.io/v1
kind: CephCluster
metadata:
  name: {{ rook_ceph_cluster_name }}
  namespace: {{ rook_ceph_namespace }}
spec:
  cephVersion:
    # Use the latest stable Ceph release available in Ceph's container registry
    image: quay.io/ceph/ceph:v18.2.0
    allowUnsupported: false
  dataDirHostPath: {{ rook_ceph_data_dir_host_path }}
  skipUpgradeChecks: false
  continueUpgradeAfterChecksEvenIfNotHealthy: false
  waitTimeoutForHealthyOSDInMinutes: 10
  mon:
    count: {{ rook_ceph_mon_count }}
    allowMultiplePerNode: false
{% if rook_ceph_resources.mon is defined %}
    resources:
      limits:
        cpu: {{ rook_ceph_resources.mon.limits.cpu }}
        memory: {{ rook_ceph_resources.mon.limits.memory }}
      requests:
        cpu: {{ rook_ceph_resources.mon.requests.cpu }}
        memory: {{ rook_ceph_resources.mon.requests.memory }}
{% endif %}
  mgr:
    count: {{ rook_ceph_mgr_count }}
    allowMultiplePerNode: false
    modules:
      - name: pg_autoscaler
        enabled: true
{% if rook_ceph_resources.mgr is defined %}
    resources:
      limits:
        cpu: {{ rook_ceph_resources.mgr.limits.cpu }}
        memory: {{ rook_ceph_resources.mgr.limits.memory }}
      requests:
        cpu: {{ rook_ceph_resources.mgr.requests.cpu }}
        memory: {{ rook_ceph_resources.mgr.requests.memory }}
{% endif %}
  dashboard:
    enabled: {{ rook_ceph_dashboard_enabled }}
    ssl: {{ rook_ceph_dashboard_ssl }}
    port: {{ rook_ceph_dashboard_port }}
  monitoring:
    enabled: {{ rook_ceph_monitoring_enabled }}
    rulesNamespace: {{ rook_ceph_monitoring_namespace }}
  network:
    provider: {{ rook_ceph_network_provider }}
    hostNetwork: {{ rook_ceph_host_network }}
  crashCollector:
    disable: {{ rook_ceph_crash_collector_disable }}
{% if rook_ceph_resources.crashcollector is defined %}
    resources:
      limits:
        cpu: {{ rook_ceph_resources.crashcollector.limits.cpu }}
        memory: {{ rook_ceph_resources.crashcollector.limits.memory }}
      requests:
        cpu: {{ rook_ceph_resources.crashcollector.requests.cpu }}
        memory: {{ rook_ceph_resources.crashcollector.requests.memory }}
{% endif %}
  cleanupPolicy:
    confirmation: ""
    sanitizeDisks:
      method: quick
      dataSource: zero
      iteration: 1
  storage:
    useAllNodes: {{ rook_ceph_storage_use_all_nodes }}
    useAllDevices: {{ rook_ceph_storage_use_all_devices }}
    config:
{% for key, value in rook_ceph_storage_config.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% if rook_ceph_osd_devices | length > 0 or rook_ceph_nodes | length > 0 %}
    nodes:
{% if rook_ceph_osd_devices | length > 0 %}
    # Devices specified globally for all nodes
    - name: "*"  # All nodes
      devices:
{% for device in rook_ceph_osd_devices %}
      - name: "{{ device }}"
{% endfor %}
{% endif %}
{% if rook_ceph_nodes | length > 0 %}
    # Node-specific device configuration
{% for node in rook_ceph_nodes %}
    - name: "{{ node.name }}"
      devices:
{% for device in node.devices %}
      - name: "{{ device.name }}"
{% endfor %}
{% endfor %}
{% endif %}
{% endif %}
{% if rook_ceph_resources.osd is defined %}
    resources:
      limits:
        cpu: {{ rook_ceph_resources.osd.limits.cpu }}
        memory: {{ rook_ceph_resources.osd.limits.memory }}
      requests:
        cpu: {{ rook_ceph_resources.osd.requests.cpu }}
        memory: {{ rook_ceph_resources.osd.requests.memory }}
{% endif %}
{% if rook_ceph_resources.prepareosd is defined %}
    prepareosd:
      resources:
        limits:
          cpu: {{ rook_ceph_resources.prepareosd.limits.cpu }}
          memory: {{ rook_ceph_resources.prepareosd.limits.memory }}
        requests:
          cpu: {{ rook_ceph_resources.prepareosd.requests.cpu }}
          memory: {{ rook_ceph_resources.prepareosd.requests.memory }}
{% endif %}
