---
- name: Create k3s and kubelet directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  loop:
    - "{{ k3s_data_dir }}"
    - "{{ kubelet_root_dir }}"

- name: Read K3s server token
  ansible.builtin.slurp:
    src: "{{ k3s_data_dir }}/server/token"
  register: k3s_token_b64
  delegate_to: "{{ groups['kube_control_plane'][0] }}"  # Runs on first master node
  run_once: true                           # Only needs to run once  

- name: Set token as variable
  ansible.builtin.set_fact:
    k3s_token: "{{ k3s_token_b64['content'] | b64decode | trim }}"

- name: Show all IPv4 addresses
  ansible.builtin.set_fact:
    master_ip: "{{ groups['kube_control_plane'][0] }}"

- name: Verify required variables are set
  ansible.builtin.fail:
    msg: "Both master_ip and k3s_token must be provided."
  when: master_ip is not defined or master_ip == '' or k3s_token is not defined or k3s_token == ''

- name: Debug node configuration settings
  ansible.builtin.debug:
    msg: 
      - "Debug: nodefs_dir = {{ kubelet_root_dir | default('') }}"
      - "Debug: imagefs_dir = {{ k3s_data_dir | default('') }}"

- name: Install K3s agent on worker node
  ansible.builtin.command: >
    /bin/bash -c "curl -sfL https://get.k3s.io |
    INSTALL_K3S_CHANNEL={{ k3s_version_channel }}
    K3S_URL=https://{{ master_ip }}:6443
    K3S_TOKEN={{ k3s_token }}
    K3S_DATA_DIR="{{ k3s_data_dir }}"
    K3S_KUBELET_ARG="--root-dir={{ kubelet_root_dir }}"
    sh -"
  args:
    creates: /usr/local/bin/k3s
  register: k3s_install_result    

- name: Verify K3s agent is running
  ansible.builtin.service:
    name: k3s-agent
    state: started
  register: k3s_service_check
  ignore_errors: true

- name: Display installation status
  ansible.builtin.debug:
    msg: "K3s installation completed on worker node."
  when: k3s_service_check.state is defined and k3s_service_check.state == "started"
