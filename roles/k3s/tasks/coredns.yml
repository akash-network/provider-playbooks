---
- name: Copy kubeconfig to user's .kube directory
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'

- name: Wait for CoreDNS ConfigMap to be available
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ConfigMap
    name: coredns
    namespace: kube-system
  register: coredns_cm
  
- name: Notify waiting for CoreDNS ConfigMap
  debug:
    msg: "Waiting for the coredns configmap resource..."
  when: coredns_cm.resources is not defined or coredns_cm.resources | length == 0

- name: Patch CoreDNS configuration
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: coredns
        namespace: kube-system
      data:
        Corefile: |
          .:53 {
              errors
              health
              ready
              kubernetes cluster.local in-addr.arpa ip6.arpa {
                pods insecure
                fallthrough in-addr.arpa ip6.arpa
              }
              hosts /etc/coredns/NodeHosts {
                ttl 60
                reload 15s
                fallthrough
              }
              prometheus :9153
              forward . 8.8.8.8 1.1.1.1
              cache 30
              loop
              reload
              loadbalance
              import /etc/coredns/custom/*.override
          }
          import /etc/coredns/custom/*.server
  
- name: Confirm CoreDNS configuration patched
  debug:
    msg: "CoreDNS configuration patched."